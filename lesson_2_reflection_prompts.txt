>What happens when you initialize a repository? Why do you need to do it?

	When we initialize a repository(directory) as git it creates a .git file in that directory. This makes the repository as git based repository. We need to do git init to track the changes in it files & version control.

>How is the staging area different from the working directory and the repository? What value do you think it offers?

	Staging area is where we add files for making commit. Using staging area we can specify which files to commit and which files not to commit. It offers a control on files to be commited together instaed of commiting all the files in a directory.

>How can you use the staging area to make sure you have one commit per logical change?

	After making any changes to our file first we will add that file to staging area. We will compare the staging area to directory file and also with the latest commit in the repository. That way we can ensure that only important logical changes are commited.

>What are some situations when branches would be helpful in keeping your history organized? How would branches help?

	Branches are useful when we want to experiment new features, after completing our demo basic code. We can also branch to change user language like spanish, italian,etc. Also when branched if we make some changes in master branch it wont affect the sub branch and vice versa. Branching helps keep new experimental changes seperate & thus we won't have to revert back to old version.

>How do the diagrams help you visualize the branch structure?

	Driagrams help us understand how git manages the commits histroy and what version control actually means. It also helps in understanding how to maintain branches and which branches may get lost if we checkout to master.
